import numpy as np
from dataCollection.airports.Airport import Airport

class Chicago(Airport):
    code = "ORD"
    atol = 1.5  # TODO fix

    exitLocations = np.array(
        (   # 27R / 9L top
            (-87.927061, -87.925979, 42.001947, 42.002465),   # left
            (-87.925682, -87.921817, 42.001930, 42.002591),   # C1
            (-87.904206, -87.900522, 42.001965, 42.002595),   # M1
            (-87.899783, -87.898925, 42.002085, 42.002526),   # right
            # 9C / 27C 2nd
            (-87.931807, -87.930983, 41.988717, 41.989681),    # left upper
            (-87.931842, -87.930962, 41.987139, 41.987931),    # left lower
            (-87.930534, -87.929649, 41.988706, 41.989744),    # VV upper
            (-87.930534, -87.929660, 41.987170, 41.987922),    # VV lower
            (-87.924496, -87.923554, 41.988746, 41.989667),    # FF upper
            (-87.924553, -87.923582, 41.987143, 41.987902),    # FF lower
            (-87.921209, -87.917755, 41.987132, 41.987937),    # E1
            (-87.917349, -87.913788, 41.987058, 41.987948),    # E2
            (-87.912555, -87.908711, 41.987011, 41.987908),    # E3
            (-87.906715, -87.902831, 41.987069, 41.987905),    # E4
            (-87.900965, -87.899860, 41.988742, 41.989622),    # M upper
            (-87.901042, -87.900015, 41.987155, 41.987910),    # M lower
            (-87.895450, -87.894475, 41.988731, 41.989686),    # TT upper
            (-87.895586, -87.894475, 41.987111, 41.987948),    # TT lower
            (-87.890948, -87.890064, 41.987184, 41.987913),    # PP upper
            (-87.890879, -87.890086, 41.988766, 41.989693),    # PP lower
            # 9R / 27L 3rd
            (-87.931807, -87.930983, 41.984262, 41.984711),   # left upper
            (-87.931807, -87.930983, 41.983145, 41.983612),   # left lower
            (-87.930534, -87.929649, 41.984262, 41.984711),   # VV upper
            (-87.930534, -87.929649, 41.983145, 41.983612),   # VV lower
            (-87.926844, -87.926095, 41.984262, 41.984711),   # BB upper
            (-87.926844, -87.926095, 41.983145, 41.983612),   # BB lower
            (-87.924496, -87.923554, 41.984262, 41.984711),   # FF upper
            (-87.924496, -87.923554, 41.983145, 41.983612),   # FF lower
            (-87.918675, -87.917824, 41.984262, 41.984711),   # R upper
            (-87.918675, -87.917824, 41.983145, 41.983612),   # R lower
            (-87.915573, -87.912964, 41.983145, 41.983612),   # G1
            (-87.908997, -87.908211, 41.984262, 41.984711),   # X upper
            (-87.908997, -87.908211, 41.983145, 41.983612),   # X lower
            (-87.900965, -87.899860, 41.984262, 41.984711),   # M upper
            (-87.900965, -87.899860, 41.983145, 41.983612),   # M lower
            (-87.895450, -87.894475, 41.984262, 41.984711),   # TT upper
            (-87.895450, -87.894475, 41.983145, 41.983612),   # TT lower
            (-87.890948, -87.890064, 41.984262, 41.984711),   # PP upper
            (-87.890948, -87.890064, 41.983145, 41.983612),   # PP lower
            # 4L / 22R upper crosswind
            (-87.915319, -87.914559, 41.981417, 41.981872),    # H
            (-87.913540, -87.912839, 41.981395, 41.981828),    # B
            (-87.914079, -87.913340, 41.982662, 41.983142),   # G left
            (-87.912329, -87.911475, 41.982258, 41.983125),   # G right/A2
            (-87.908994, -87.908108, 41.984913, 41.985910),   # X
            (-87.909802, -87.909251, 41.986573, 41.987118),   # E left
            (-87.907504, -87.906908, 41.986573, 41.987118),   # E right
            (-87.906578, -87.905745, 41.989700, 41.990260),   # D left
            (-87.904028, -87.903130, 41.989700, 41.990260),   # D right
            (-87.900804, -87.900077, 41.994676, 41.995715),   # M upper
            (-87.900804, -87.900077, 41.992678, 41.993278),   # M lower
            (-87.896430, -87.895249, 41.996410, 41.997260),   # NN
            # 10L / 28R 1st parallel below terminal
            (-87.931807, -87.930983, 41.969380, 41.969979),    # left upper
            (-87.931807, -87.930983, 41.967825, 41.968591),    # left lower
            (-87.926844, -87.926095, 41.969380, 41.969979),    # BB upper
            (-87.926844, -87.926095, 41.967825, 41.968591),    # BB lower
            (-87.925828, -87.924938, 41.969380, 41.969979),    # CC upper
            (-87.925828, -87.924938, 41.967825, 41.968591),    # CC lower
            (-87.921332, -87.920140, 41.969380, 41.969979),    # DD upper
            (-87.921332, -87.920140, 41.967825, 41.968591),    # DD lower
            (-87.913917, -87.912413, 41.969380, 41.969979),    # N1
            (-87.908656, -87.906359, 41.969380, 41.969979),    # N2
            (-87.904685, -87.901573, 41.969380, 41.969979),    # N3
            (-87.901155, -87.897785, 41.969380, 41.969979),    # N4
            (-87.896099, -87.895133, 41.969380, 41.969979),    # N5
            (-87.912161, -87.910111, 41.967825, 41.968591),    # P4
            (-87.906134, -87.904407, 41.967825, 41.968591),    # X
            (-87.901833, -87.900924, 41.967825, 41.968591),    # F
            (-87.894925, -87.893929, 41.969380, 41.969979),    # EE upper
            (-87.894925, -87.893929, 41.967825, 41.968591),    # EE lower
            (-87.891160, -87.890220, 41.969380, 41.969979),    # GG upper
            (-87.892153, -87.890220, 41.967825, 41.968591),    # GG lower
            (-87.885518, -87.883273, 41.969380, 41.969979),    # Y upper
            (-87.886281, -87.884589, 41.967825, 41.968591),    # Y lower
            # 10C / 28C 2nd to last parallel
            (-87.931807, -87.930983, 41.966152, 41.966884),    # left upper
            (-87.931807, -87.930983, 41.964528, 41.965265),    # left lower
            (-87.926844, -87.926095, 41.966152, 41.966884),    # BB upper
            (-87.926844, -87.926095, 41.964528, 41.965265),    # BB lower
            (-87.925828, -87.924938, 41.966152, 41.966884),    # CC upper
            (-87.925828, -87.924938, 41.964528, 41.965265),    # CC lower
            (-87.921332, -87.920140, 41.966152, 41.966884),    # DD upper
            (-87.921332, -87.920140, 41.964528, 41.965265),    # DD lower
            (-87.920297, -87.917116, 41.966152, 41.966884),    # P1
            (-87.915991, -87.913871, 41.966152, 41.966884),    # P2
            (-87.913871, -87.910865, 41.966152, 41.966884),    # P3
            (-87.910865, -87.905570, 41.966152, 41.966884),    # P5
            (-87.905570, -87.901855, 41.966152, 41.966884),    # P6
            (-87.905480, -87.904602, 41.964528, 41.965265),    # S
            (-87.901833, -87.900924, 41.966152, 41.966884),    # F upper
            (-87.901833, -87.900924, 41.964528, 41.965265),    # F lower
            (-87.897439, -87.896372, 41.966152, 41.966884),    # HH upper
            (-87.897439, -87.896372, 41.964528, 41.965265),    # HH lower
            (-87.892600, -87.891604, 41.966152, 41.966884),    # GG upper
            (-87.892600, -87.891604, 41.964528, 41.965265),    # GG lower
            # 10R / 28L last parallel
            (-87.928074, -87.927258, 41.957555, 41.958237),   # left
            (-87.927258, -87.925351, 41.957555, 41.958237),   # W1
            (-87.925351, -87.920104, 41.957555, 41.958237),   # W2
            (-87.909390, -87.904171, 41.957555, 41.958237),   # W3
            (-87.904171, -87.901014, 41.957555, 41.958237),   # W4
            (-87.901014, -87.900004, 41.957555, 41.958237),   # W5
            # 4R/ 22L lower crosswind
            (-87.901256, -87.899688, 41.953656, 41.955005),   # Y1
            (-87.897855, -87.896257, 41.956153, 41.957238),   # Y2
            (-87.894241, -87.892894, 41.959247, 41.960259),   # Y3
            (-87.887098, -87.885876, 41.965050, 41.966184),   # Y4
            (-87.881027, -87.879943, 41.969920, 41.970750),   # V
        )
    )

    nExits = exitLocations.shape[0]

    # plotting info
    centerLoc = [-87.906, 41.9797]
    longRange = 0.029
    latRange = 0.0275
